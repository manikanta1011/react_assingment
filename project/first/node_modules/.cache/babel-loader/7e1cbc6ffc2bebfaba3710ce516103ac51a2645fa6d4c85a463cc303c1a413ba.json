{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\project\\\\first\\\\src\\\\task\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [groups, setGroups] = useState([{\n    id: 1,\n    name: \"My Notes\",\n    color: \"#007bff\"\n  }]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [groupName, setGroupName] = useState(\"\");\n  const [selectedColor, setSelectedColor] = useState(null);\n  const colors = [\"#ff6666\", \"#ffcc66\", \"#66ff66\", \"#66ccff\", \"#9966ff\"];\n  const handleAddGroup = () => {\n    setShowPopup(true);\n  };\n  const handleCreateGroup = () => {\n    if (groupName && selectedColor) {\n      const newGroup = {\n        id: groups.length + 1,\n        name: groupName,\n        color: selectedColor\n      };\n      setGroups([...groups, newGroup]);\n      setGroupName(\"\");\n      setSelectedColor(null);\n      setShowPopup(false);\n    } else {\n      alert(\"Please enter a group name and select a color.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"group-list\",\n        children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: group.color\n            },\n            children: group.name.split(\" \").map(word => word[0]).join(\"\").toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 1\n          }, this), group.name]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-group-btn\",\n        onClick: handleAddGroup,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter group name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-options\",\n        children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: color\n          },\n          className: selectedColor === color ? \"selected\" : \"\",\n          onClick: () => setSelectedColor(color)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateGroup,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 1\n  }, this);\n}\n_s(Home, \"esmIhQRU01Ig9T9+QIr59NhfQyc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Home","_s","groups","setGroups","id","name","color","showPopup","setShowPopup","groupName","setGroupName","selectedColor","setSelectedColor","colors","handleAddGroup","handleCreateGroup","newGroup","length","alert","className","children","map","group","style","backgroundColor","split","word","join","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","index","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/project/first/src/task/Home.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n \r\nfunction Home() {\r\n  const [groups, setGroups] = useState([\r\n    { id: 1, name: \"My Notes\", color: \"#007bff\" },\r\n  ]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [selectedColor, setSelectedColor] = useState(null);\r\n \r\n  const colors = [\"#ff6666\", \"#ffcc66\", \"#66ff66\", \"#66ccff\", \"#9966ff\"];\r\n \r\n  const handleAddGroup = () => {\r\n    setShowPopup(true);\r\n  };\r\n \r\n  const handleCreateGroup = () => {\r\n    if (groupName && selectedColor) {\r\n      const newGroup = {\r\n        id: groups.length + 1,\r\n        name: groupName,\r\n        color: selectedColor,\r\n      };\r\n      setGroups([...groups, newGroup]);\r\n      setGroupName(\"\");\r\n      setSelectedColor(null);\r\n      setShowPopup(false);\r\n    } else {\r\n      alert(\"Please enter a group name and select a color.\");\r\n    }\r\n  };\r\n \r\n  return (\r\n<div className=\"app\">\r\n<div className=\"sidebar\">\r\n<ul className=\"group-list\">\r\n          {groups.map((group) => (\r\n<li key={group.id}>\r\n<span style={{ backgroundColor: group.color }}>\r\n                {group.name\r\n                  .split(\" \")\r\n                  .map((word) => word[0])\r\n                  .join(\"\")\r\n                  .toUpperCase()}\r\n</span>\r\n              {group.name}\r\n</li>\r\n          ))}\r\n</ul>\r\n<button className=\"add-group-btn\" onClick={handleAddGroup}>\r\n          +\r\n</button>\r\n</div>\r\n \r\n      {showPopup && (\r\n<div className=\"popup\">\r\n<h3>Create New Group</h3>\r\n<input\r\n            type=\"text\"\r\n            placeholder=\"Enter group name\"\r\n            value={groupName}\r\n            onChange={(e) => setGroupName(e.target.value)}\r\n          />\r\n<div className=\"color-options\">\r\n            {colors.map((color, index) => (\r\n<div\r\n                key={index}\r\n                style={{ backgroundColor: color }}\r\n                className={selectedColor === color ? \"selected\" : \"\"}\r\n                onClick={() => setSelectedColor(color)}\r\n></div>\r\n            ))}\r\n</div>\r\n<button onClick={handleCreateGroup}>Create</button>\r\n</div>\r\n      )}\r\n</div>\r\n  );\r\n}\r\n \r\nexport default Home;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CACnC;IAAEO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAU,CAAC,CAC9C,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMgB,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEtE,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BN,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIN,SAAS,IAAIE,aAAa,EAAE;MAC9B,MAAMK,QAAQ,GAAG;QACfZ,EAAE,EAAEF,MAAM,CAACe,MAAM,GAAG,CAAC;QACrBZ,IAAI,EAAEI,SAAS;QACfH,KAAK,EAAEK;MACT,CAAC;MACDR,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEc,QAAQ,CAAC,CAAC;MAChCN,YAAY,CAAC,EAAE,CAAC;MAChBE,gBAAgB,CAAC,IAAI,CAAC;MACtBJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACLU,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;EAED,oBACFnB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBrB,OAAA;MAAKoB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACxBrB,OAAA;QAAIoB,SAAS,EAAC,YAAY;QAAAC,QAAA,EACflB,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAC5BvB,OAAA;UAAAqB,QAAA,gBACArB,OAAA;YAAMwB,KAAK,EAAE;cAAEC,eAAe,EAAEF,KAAK,CAAChB;YAAM,CAAE;YAAAc,QAAA,EAC7BE,KAAK,CAACjB,IAAI,CACRoB,KAAK,CAAC,GAAG,CAAC,CACVJ,GAAG,CAAEK,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,CAAC,CACtBC,IAAI,CAAC,EAAE,CAAC,CACRC,WAAW,CAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,EACQV,KAAK,CAACjB,IAAI;QAAA,GARhBiB,KAAK,CAAClB,EAAE;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASb,CACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACLjC,OAAA;QAAQoB,SAAS,EAAC,eAAe;QAACc,OAAO,EAAEnB,cAAe;QAAAM,QAAA,EAAC;MAE3D;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAECzB,SAAS,iBAChBR,OAAA;MAAKoB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACtBrB,OAAA;QAAAqB,QAAA,EAAI;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBjC,OAAA;QACYmC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAE3B,SAAU;QACjB4B,QAAQ,EAAGC,CAAC,IAAK5B,YAAY,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACZjC,OAAA;QAAKoB,SAAS,EAAC,eAAe;QAAAC,QAAA,EACjBP,MAAM,CAACQ,GAAG,CAAC,CAACf,KAAK,EAAEkC,KAAK,kBACrCzC,OAAA;UAEgBwB,KAAK,EAAE;YAAEC,eAAe,EAAElB;UAAM,CAAE;UAClCa,SAAS,EAAER,aAAa,KAAKL,KAAK,GAAG,UAAU,GAAG,EAAG;UACrD2B,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAACN,KAAK;QAAE,GAHlCkC,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIpB,CACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACNjC,OAAA;QAAQkC,OAAO,EAAElB,iBAAkB;QAAAK,QAAA,EAAC;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN;AAAC/B,EAAA,CA5EQD,IAAI;AAAAyC,EAAA,GAAJzC,IAAI;AA8Eb,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}