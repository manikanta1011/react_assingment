{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\project\\\\first\\\\src\\\\task3\\\\Firstt.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import './index.css'\n\n// const Firstt = () => {\n//   const [data, setData] = useState([]); \n//   const [showPopup, setShowPopup] = useState(false); \n//   const [groupName, setGroupName] = useState(\"\"); \n//   const [selectedColor, setSelectedColor] = useState(\"\"); \n//   const navigate = useNavigate();\n\n//   const handleAddGroup = () => {\n//     setShowPopup(true);\n//   };\n\n//   const handleCreateGroup = () => {\n//     if (groupName && selectedColor) {\n//       setData([...data, { name: groupName, color: selectedColor }]);\n//       setGroupName(\"\");\n//       setSelectedColor(\"\");\n//       setShowPopup(false);\n//     } else {\n//       alert(\"Please enter a group name and select a color.\");\n//     }\n//   };\n\n//   const handleNavigateToGroup = (groupName) => {\n//     navigate(`/group/${groupName}`);\n//   };\n\n//   return (\n\n// <div className=\"main\">\n\n// <ul className=\"youell\">\n// <h3>POCKET NOTES</h3>\n//         {data.map((group, index) => (\n// <li key={index}>\n// <p\n//               onClick={() => handleNavigateToGroup(group.name)}\n//               style={{ backgroundColor: group.color, padding: \"5px\", borderRadius: \"5px\" }}\n// >\n//               {group.name}\n// </p>\n// </li>\n//         ))}\n// <button onClick={handleAddGroup}>+</button>\n// </ul>\n\n//       {showPopup && (\n// <div className=\"popup\">\n// <input\n//             type=\"text\"\n//             value={groupName}\n//             onChange={(e) => setGroupName(e.target.value)}\n//             placeholder=\"Enter group name\"\n//           />\n// <div className=\"color-options\">\n//             {[\"#FF5733\", \"#33FF57\", \"#3357FF\", \"#FF33A8\", \"#F4FF33\"].map((color) => (\n// <div\n//                 key={color}\n//                 className={`color-box ${selectedColor === color ? \"selected\" : \"\"}`}\n//                 style={{ backgroundColor: color }}\n//                 onClick={() => setSelectedColor(color)}\n//               />\n//             ))}\n// </div>\n// <button onClick={handleCreateGroup}>Create</button>\n// <button onClick={() => setShowPopup(false)}>Cancel</button>\n// </div>\n//       )}\n//       <div className=\"lpp\" >\n//         <img src={'./asset/kk.png'} alt=\"\"/>\n//          <h2>pocket notes</h2>\n//         <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. <br></br>Temporibus voluptates qui rerum totam corrupti repudiandae.</p>\n//       </div>\n// </div>\n//   );\n// };\n//  export default Firstt\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Firstt = ({\n  setGroupName\n}) => {\n  _s();\n  const [data, setData] = useState([]); // Stores groups\n  const [showPopup, setShowPopup] = useState(false); // Controls popup visibility\n  const [groupName, setGroupNameLocal] = useState(\"\"); // Local group name state\n  const [selectedColor, setSelectedColor] = useState(\"\"); // Tracks the selected color\n  const navigate = useNavigate();\n  const handleAddGroup = () => {\n    setShowPopup(true);\n  };\n  const handleCreateGroup = () => {\n    if (groupName && selectedColor) {\n      setData([...data, {\n        name: group,\n        color: selectedColor\n      }]);\n      setGroupNameLocal(\"\");\n      setSelectedColor(\"\");\n      setShowPopup(false);\n    } else {\n      alert(\"Please enter a group name and select a color.\");\n    }\n  };\n  const handleNavigateToGroup = name => {\n    setGroupName(name); // Update global groupName state\n    navigate(`/Html/${name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"youell\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"POCKET NOTES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 1\n      }, this), data.map((group, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleNavigateToGroup(group.name),\n          style: {\n            backgroundColor: group.color,\n            padding: \"5px\",\n            borderRadius: \"5px\"\n          },\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 1\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 1\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddGroup,\n        className: \"but\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: group,\n        onChange: e => setGroupNameLocal(e.target.value),\n        placeholder: \"Enter group name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-options\",\n        children: [\"#FF5733\", \"#33FF57\", \"#3357FF\", \"#FF33A8\", \"#F4FF33\"].map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `color-box ${selectedColor === color ? \"selected\" : \"\"}`,\n          style: {\n            backgroundColor: color\n          },\n          onClick: () => setSelectedColor(color)\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateGroup,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPopup(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Pocket\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./asset/pencil.png\",\n        alt: \"\",\n        style: {\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pocket Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Send and receive messages without keeping your phone online. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 72\n        }, this), \"Use Pocket Notes on up to 4 linked devices and 1 mobile phone.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 1\n  }, this);\n};\n_s(Firstt, \"EO1LI+OBIBRuGwYsVKCbMc7CtoU=\", false, function () {\n  return [useNavigate];\n});\n_c = Firstt;\nexport default Firstt;\nvar _c;\n$RefreshReg$(_c, \"Firstt\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Firstt","setGroupName","_s","data","setData","showPopup","setShowPopup","groupName","setGroupNameLocal","selectedColor","setSelectedColor","navigate","handleAddGroup","handleCreateGroup","name","group","color","alert","handleNavigateToGroup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","style","backgroundColor","padding","borderRadius","type","value","onChange","e","target","placeholder","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/project/first/src/task3/Firstt.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import './index.css'\r\n\r\n \r\n// const Firstt = () => {\r\n//   const [data, setData] = useState([]); \r\n//   const [showPopup, setShowPopup] = useState(false); \r\n//   const [groupName, setGroupName] = useState(\"\"); \r\n//   const [selectedColor, setSelectedColor] = useState(\"\"); \r\n//   const navigate = useNavigate();\r\n \r\n//   const handleAddGroup = () => {\r\n//     setShowPopup(true);\r\n//   };\r\n \r\n//   const handleCreateGroup = () => {\r\n//     if (groupName && selectedColor) {\r\n//       setData([...data, { name: groupName, color: selectedColor }]);\r\n//       setGroupName(\"\");\r\n//       setSelectedColor(\"\");\r\n//       setShowPopup(false);\r\n//     } else {\r\n//       alert(\"Please enter a group name and select a color.\");\r\n//     }\r\n//   };\r\n \r\n//   const handleNavigateToGroup = (groupName) => {\r\n//     navigate(`/group/${groupName}`);\r\n//   };\r\n \r\n//   return (\r\n\r\n// <div className=\"main\">\r\n    \r\n// <ul className=\"youell\">\r\n// <h3>POCKET NOTES</h3>\r\n//         {data.map((group, index) => (\r\n// <li key={index}>\r\n// <p\r\n//               onClick={() => handleNavigateToGroup(group.name)}\r\n//               style={{ backgroundColor: group.color, padding: \"5px\", borderRadius: \"5px\" }}\r\n// >\r\n//               {group.name}\r\n// </p>\r\n// </li>\r\n//         ))}\r\n// <button onClick={handleAddGroup}>+</button>\r\n// </ul>\r\n \r\n//       {showPopup && (\r\n// <div className=\"popup\">\r\n// <input\r\n//             type=\"text\"\r\n//             value={groupName}\r\n//             onChange={(e) => setGroupName(e.target.value)}\r\n//             placeholder=\"Enter group name\"\r\n//           />\r\n// <div className=\"color-options\">\r\n//             {[\"#FF5733\", \"#33FF57\", \"#3357FF\", \"#FF33A8\", \"#F4FF33\"].map((color) => (\r\n// <div\r\n//                 key={color}\r\n//                 className={`color-box ${selectedColor === color ? \"selected\" : \"\"}`}\r\n//                 style={{ backgroundColor: color }}\r\n//                 onClick={() => setSelectedColor(color)}\r\n//               />\r\n//             ))}\r\n// </div>\r\n// <button onClick={handleCreateGroup}>Create</button>\r\n// <button onClick={() => setShowPopup(false)}>Cancel</button>\r\n// </div>\r\n//       )}\r\n//       <div className=\"lpp\" >\r\n//         <img src={'./asset/kk.png'} alt=\"\"/>\r\n//          <h2>pocket notes</h2>\r\n//         <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. <br></br>Temporibus voluptates qui rerum totam corrupti repudiandae.</p>\r\n//       </div>\r\n// </div>\r\n//   );\r\n// };\r\n//  export default Firstt\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n import './index.css'\r\nconst Firstt = ({ setGroupName }) => {\r\n  const [data, setData] = useState([]); // Stores groups\r\n  const [showPopup, setShowPopup] = useState(false); // Controls popup visibility\r\n  const [groupName, setGroupNameLocal] = useState(\"\"); // Local group name state\r\n  const [selectedColor, setSelectedColor] = useState(\"\"); // Tracks the selected color\r\n  const navigate = useNavigate();\r\n \r\n  const handleAddGroup = () => {\r\n    setShowPopup(true);\r\n  };\r\n \r\n  const handleCreateGroup = () => {\r\n    if (groupName && selectedColor) {\r\n      setData([...data, { name: group, color: selectedColor }]);\r\n      setGroupNameLocal(\"\");\r\n      setSelectedColor(\"\");\r\n      setShowPopup(false);\r\n    } else {\r\n      alert(\"Please enter a group name and select a color.\");\r\n    }\r\n  };\r\n \r\n  const handleNavigateToGroup = (name) => {\r\n    setGroupName(name); // Update global groupName state\r\n    navigate(`/Html/${name}`);\r\n  };\r\n \r\n  return (\r\n<div className=\"main\">\r\n<ul className=\"youell\">\r\n<h2>POCKET NOTES</h2>\r\n        {data.map((group, index) => (\r\n<li key={index}>\r\n<p\r\n              onClick={() => handleNavigateToGroup(group.name)}\r\n              style={{\r\n                backgroundColor: group.color,\r\n                padding: \"5px\",\r\n                borderRadius: \"5px\",\r\n              }}\r\n>\r\n              {group.name}\r\n</p>\r\n</li>\r\n        ))}\r\n<button onClick={handleAddGroup} className=\"but\">\r\n          +\r\n</button>\r\n</ul>\r\n \r\n      {showPopup && (\r\n<div className=\"popup\">\r\n<input\r\n            type=\"text\"\r\n            value={group}\r\n            onChange={(e) => setGroupNameLocal(e.target.value)}\r\n            placeholder=\"Enter group name\"\r\n          />\r\n<div className=\"color-options\">\r\n            {[\"#FF5733\", \"#33FF57\", \"#3357FF\", \"#FF33A8\", \"#F4FF33\"].map(\r\n              (color) => (\r\n<div\r\n                  key={color}\r\n                  className={`color-box ${\r\n                    selectedColor === color ? \"selected\" : \"\"\r\n                  }`}\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => setSelectedColor(color)}\r\n                />\r\n              )\r\n            )}\r\n</div>\r\n<button onClick={handleCreateGroup}>Create</button>\r\n<button onClick={() => setShowPopup(false)}>Cancel</button>\r\n</div>\r\n      )}\r\n \r\n      <div className=\"Pocket\">\r\n<img src=\"./asset/pencil.png\" alt=\"\" style={{ width: \"50%\" }} />\r\n<h1>Pocket Notes</h1>\r\n<p>\r\n          Send and receive messages without keeping your phone online. <br />\r\n          Use Pocket Notes on up to 4 linked devices and 1 mobile phone.\r\n</p>\r\n</div>\r\n</div>\r\n  );\r\n};\r\n \r\nexport default Firstt;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}