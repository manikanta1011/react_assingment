{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\project\\\\first\\\\src\\\\task4\\\\Html.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Html = ({\n  groupName\n}) => {\n  _s();\n  const [Input, setInput] = useState(\"\");\n  const [update, setUpdate] = useState([]);\n  const handleInput = e => {\n    setInput(e.target.value);\n  };\n  const handleInputChange = () => {\n    setUpdate(prev => [...prev, Input]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: groupName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"oo\",\n      children: [\"Another productive way to use this tool to begin a daily writing routine. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 93\n      }, this), \"One way is to generate a random paragraph with the intention to try to rewrite it while still.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 196\n      }, this), \" The purpose here is to just get the writing started so that when the writer goes onto their day's \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 304\n      }, this), \" words are already flowing from their fingers.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paragraphs\",\n        children: update.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"paragraph-item\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Input,\n          onChange: handleInput,\n          placeholder: \"Write something...\",\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleInputChange,\n          className: \"input-button\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 1\n  }, this);\n};\n_s(Html, \"R++2sXYVrGn3twcRdVBqteMPpLA=\");\n_c = Html;\nexport default Html;\nvar _c;\n$RefreshReg$(_c, \"Html\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Html","groupName","_s","Input","setInput","update","setUpdate","handleInput","e","target","value","handleInputChange","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/project/first/src/task4/Html.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./app.css\";\r\n\r\n\r\n \r\nconst Html = ({ groupName }) => {\r\n\r\n  const [Input, setInput] = useState(\"\");\r\n  const [update, setUpdate] = useState([]);\r\n  const handleInput = (e) => {\r\n\r\n    setInput(e.target.value);\r\n\r\n  };\r\n \r\n  const handleInputChange = () => {\r\n  setUpdate((prev) => [...prev, Input]);\r\n  setInput(\"\");\r\n\r\n  };\r\n \r\n  return (\r\n<div className=\"group-page\">\r\n<h1>{groupName}</h1>\r\n<p className=\"oo\">Another productive way to use this tool to begin a daily writing routine. <br></br>One way is to generate a random paragraph with the intention to try to rewrite it while still.<br></br> The purpose here is to just get the writing started so that when the writer goes onto their day's <br></br> words are already flowing from their fingers.</p>\r\n \r\n      <div className=\"content-container\">\r\n<div className=\"paragraphs\">\r\n\r\n          {update.map((item, index) => (\r\n<p key={index} className=\"paragraph-item\">\r\n\r\n              {item}\r\n</p>\r\n\r\n          ))}\r\n</div>\r\n \r\n        <div className=\"input-container\">\r\n<input\r\n\r\n            type=\"text\"\r\n\r\n            value={Input}\r\n\r\n            onChange={handleInput}\r\n\r\n            placeholder=\"Write something...\"\r\n\r\n            className=\"text-input\"\r\n\r\n          />\r\n<button onClick={handleInputChange} className=\"input-button\">\r\nadd\r\n</button>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n  );\r\n\r\n};\r\n \r\nexport default Html;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}