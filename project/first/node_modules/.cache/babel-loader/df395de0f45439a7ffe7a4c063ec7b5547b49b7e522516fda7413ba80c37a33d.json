{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\project\\\\first\\\\src\\\\task4\\\\Html.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Html = ({\n  groupName\n}) => {\n  _s();\n  const [date, set] = useState(\"\");\n  const [update, setUpdate] = useState([]);\n  const handleInput = e => {\n    setInput(e.target.value);\n  };\n  const handleInputChange = () => {\n    setUpdate(prev => [...prev, date]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: groupName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"oo\",\n      children: [\"Another productive way to use this tool to begin a daily writing routine. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 93\n      }, this), \"One way is to generate a random paragraph with the intention to try to rewrite it while still.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 196\n      }, this), \" The purpose here is to just get the writing started so that when the writer goes onto their day's \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 304\n      }, this), \" words are already flowing from their fingers.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paragraphs\",\n        children: update.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"paragraph-item\",\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 10\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: date,\n          onChange: handleInput,\n          placeholder: \"Write something...\",\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleInputChange,\n          className: \"input-button\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 1\n  }, this);\n};\n_s(Html, \"PaiOws1lXDqPEFhOgg6OYObDFuo=\");\n_c = Html;\nexport default Html;\nvar _c;\n$RefreshReg$(_c, \"Html\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Html","groupName","_s","date","set","update","setUpdate","handleInput","e","setInput","target","value","handleInputChange","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/project/first/src/task4/Html.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./app.css\";\r\n\r\n\r\n \r\nconst Html = ({ groupName }) => {\r\n\r\n  const [date, set] = useState(\"\");\r\n  const [update, setUpdate] = useState([]);\r\n  const handleInput = (e) => {\r\n\r\n    setInput(e.target.value);\r\n\r\n  };\r\n \r\n  const handleInputChange = () => {\r\n  setUpdate((prev) => [...prev, date]);\r\n  setInput(\"\");\r\n\r\n  };\r\n \r\n  return (\r\n<div className=\"group-page\">\r\n<h1>{groupName}</h1>\r\n<p className=\"oo\">Another productive way to use this tool to begin a daily writing routine. <br></br>One way is to generate a random paragraph with the intention to try to rewrite it while still.<br></br> The purpose here is to just get the writing started so that when the writer goes onto their day's <br></br> words are already flowing from their fingers.</p>\r\n \r\n      <div className=\"content-container\">\r\n       <div className=\"paragraphs\">\r\n\r\n          {update.map((item, index) => (\r\n         <p key={index} className=\"paragraph-item\">\r\n               {item}\r\n               </p>\r\n              ))}\r\n               </div>\r\n \r\n        <div className=\"input-container\">\r\n          <input type=\"text\" value={date} onChange={handleInput} placeholder=\"Write something...\" className=\"text-input\"/>\r\n           <button onClick={handleInputChange} className=\"input-button\">add</button>\r\n         </div>\r\n          </div>\r\n         </div>\r\n\r\n  );\r\n\r\n};\r\n \r\nexport default Html;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}