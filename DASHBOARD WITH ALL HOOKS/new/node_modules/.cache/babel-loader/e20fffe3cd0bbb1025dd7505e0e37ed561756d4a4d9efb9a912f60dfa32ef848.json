{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\DASHBOARD WITH ALL HOOKS\\\\new\\\\src\\\\task 2\\\\User.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const [data, setData] = useState([]); // Store the tasks\n  const [submitted, setSubmitted] = useState(''); // Store the current input value\n  const [error, setError] = useState(null); // Handle errors\n\n  useEffect(() => {\n    // Fetch data when the component is mounted\n    fetch(\"./json.json\").then(response => response.json()).then(json => setData(json)).catch(() => setError(\"Failed to load data\"));\n  }, []);\n  const change = e => {\n    setSubmitted(e.target.value);\n  };\n  const addTask = () => {\n    if (submitted.trim() !== \"\") {\n      const newTask = {\n        name: submitted,\n        title: \"Default Title\",\n        description: \"Default Description\",\n        status: \"Pending\"\n      };\n      setData([...data, newTask]); // Add the new task to the data array\n      setSubmitted(\"\"); // Clear the input field\n    }\n  };\n  const deleteTask = index => {\n    const updatedData = data.filter((_, i) => i !== index);\n    setData(updatedData);\n  };\n  const editTask = index => {\n    const editedName = prompt(\"Edit your task\", data[index].name);\n    if (editedName) {\n      const updatedData = [...data];\n      updatedData[index].name = editedName;\n      setData(updatedData);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter task\",\n      value: submitted,\n      onChange: change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), data.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: input.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: input.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: input.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: input.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(index),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => editTask(index),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"H+4ihbvDDLjhulk12nPOB1nSi6w=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","User","_s","data","setData","submitted","setSubmitted","error","setError","fetch","then","response","json","catch","change","e","target","value","addTask","trim","newTask","name","title","description","status","deleteTask","index","updatedData","filter","_","i","editTask","editedName","prompt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","map","input","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/DASHBOARD WITH ALL HOOKS/new/src/task 2/User.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\n\r\nconst User = () => {\r\n    const [data, setData] = useState([]); // Store the tasks\r\n    const [submitted, setSubmitted] = useState(''); // Store the current input value\r\n    const [error, setError] = useState(null); // Handle errors\r\n\r\n    useEffect(() => {\r\n        // Fetch data when the component is mounted\r\n        fetch(\"./json.json\")\r\n            .then(response => response.json())\r\n            .then(json => setData(json))\r\n            .catch(() => setError(\"Failed to load data\"));\r\n    }, []);\r\n\r\n    const change = (e) => {\r\n        setSubmitted(e.target.value); \r\n    };\r\n\r\n    const addTask = () => {\r\n        if (submitted.trim() !== \"\") {\r\n           \r\n            const newTask = {\r\n                name: submitted,\r\n                title: \"Default Title\",\r\n                description: \"Default Description\",\r\n                status: \"Pending\",\r\n            };\r\n            setData([...data, newTask]); // Add the new task to the data array\r\n            setSubmitted(\"\"); // Clear the input field\r\n        }\r\n    };\r\n\r\n    const deleteTask = (index) => {\r\n       \r\n        const updatedData = data.filter((_, i) => i !== index);\r\n        setData(updatedData);\r\n    };\r\n\r\n    const editTask = (index) => {\r\n        \r\n        const editedName = prompt(\"Edit your task\", data[index].name);\r\n        if (editedName) {\r\n           \r\n            const updatedData = [...data];\r\n            updatedData[index].name = editedName;\r\n            setData(updatedData);\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className='car'>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter task\"\r\n                value={submitted}\r\n                onChange={change}\r\n            />\r\n            <button onClick={addTask}>Add</button>\r\n\r\n            {data.map((input, index) => (\r\n                <div key={index} className='cards'>\r\n                    <h3>{input.name}</h3>\r\n                    <h3>{input.title}</h3>\r\n                    <h3>{input.description}</h3>\r\n                    <h3>{input.status}</h3>\r\n                    <button onClick={() => deleteTask(index)}>Delete</button>\r\n                    <button onClick={() => editTask(index)}>Edit</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}