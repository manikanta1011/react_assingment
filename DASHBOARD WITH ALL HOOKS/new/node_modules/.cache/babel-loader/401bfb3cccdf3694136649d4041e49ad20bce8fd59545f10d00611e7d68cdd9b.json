{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\DASHBOARD WITH ALL HOOKS\\\\new\\\\src\\\\task\\\\Project.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback, useReducer, useRef } from 'react';\nimport './index.css';\n// Task Reducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst taskReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return [...state, action.task];\n    case 'EDIT_TASK':\n      return state.map(task => task.id === action.id ? {\n        ...task,\n        ...action.updatedTask\n      } : task);\n    case 'DELETE_TASK':\n      return state.filter(task => task.id !== action.id);\n    case 'TOGGLE_STATUS':\n      return state.map(task => task.id === action.id ? {\n        ...task,\n        status: task.status === 'Pending' ? 'In Progress' : 'Completed'\n      } : task);\n    default:\n      return state;\n  }\n};\n\n// Mock Data Fetch (Simulate fetching tasks from API)\nconst fetchTasks = async () => {\n  return [{\n    id: 1,\n    title: 'Task 1',\n    description: 'Description 1',\n    status: 'Pending'\n  }, {\n    id: 2,\n    title: 'Task 2',\n    description: 'Description 2',\n    status: 'In Progress'\n  }, {\n    id: 3,\n    title: 'Task 3',\n    description: 'Description 3',\n    status: 'Completed'\n  }];\n};\nconst DashBoard = () => {\n  _s();\n  const [tasks, dispatch] = useReducer(taskReducer, []);\n  const [filter, setFilter] = useState('All');\n  const [sortBy, setSortBy] = useState('title');\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: ''\n  });\n  const taskInputRef = useRef();\n\n  // Fetch Tasks\n  useEffect(() => {\n    const loadTasks = async () => {\n      const fetchedTasks = await fetchTasks();\n      fetchedTasks.forEach(task => dispatch({\n        type: 'ADD_TASK',\n        task\n      }));\n    };\n    loadTasks();\n  }, []);\n\n  // Sorting and Filtering Logic with useMemo\n  const filteredTasks = useMemo(() => {\n    return tasks.filter(task => filter === 'All' || task.status === filter);\n  }, [tasks, filter]);\n  const sortedTasks = useMemo(() => {\n    return filteredTasks.sort((a, b) => {\n      if (sortBy === 'title') {\n        return a.title.localeCompare(b.title);\n      } else {\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      }\n    });\n  }, [filteredTasks, sortBy]);\n\n  // Handle Task Actions\n  const handleAddTask = () => {\n    const newTaskData = {\n      id: Date.now(),\n      title: newTask.title,\n      description: newTask.description,\n      status: 'Pending',\n      createdAt: new Date()\n    };\n    dispatch({\n      type: 'ADD_TASK',\n      task: newTaskData\n    });\n    setNewTask({\n      title: '',\n      description: ''\n    });\n    taskInputRef.current.focus();\n  };\n  const handleEditTask = useCallback((id, updatedTask) => {\n    dispatch({\n      type: 'EDIT_TASK',\n      id,\n      updatedTask\n    });\n  }, []);\n  const handleDeleteTask = id => {\n    dispatch({\n      type: 'DELETE_TASK',\n      id\n    });\n  };\n  const handleToggleStatus = id => {\n    dispatch({\n      type: 'TOGGLE_STATUS',\n      id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFilter(e.target.value),\n        value: filter,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"In Progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSortBy(e.target.value),\n        value: sortBy,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"title\",\n          children: \"Sort by Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"Sort by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: sortedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleStatus(task.id),\n          children: \"Toggle Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTask(task.id, {\n            title: 'Updated',\n            description: 'Updated'\n          }),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(DashBoard, \"98fCXO+JRadn17M6dYo+yX1pbms=\");\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useReducer","useRef","jsxDEV","_jsxDEV","taskReducer","state","action","type","task","map","id","updatedTask","filter","status","fetchTasks","title","description","DashBoard","_s","tasks","dispatch","setFilter","sortBy","setSortBy","newTask","setNewTask","taskInputRef","loadTasks","fetchedTasks","forEach","filteredTasks","sortedTasks","sort","a","b","localeCompare","Date","createdAt","handleAddTask","newTaskData","now","current","focus","handleEditTask","handleDeleteTask","handleToggleStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/DASHBOARD WITH ALL HOOKS/new/src/task/Project.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback, useReducer, useRef } from 'react';\r\nimport './index.css'\r\n// Task Reducer\r\nconst taskReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TASK':\r\n      return [...state, action.task];\r\n    case 'EDIT_TASK':\r\n      return state.map((task) =>\r\n        task.id === action.id ? { ...task, ...action.updatedTask } : task\r\n      );\r\n    case 'DELETE_TASK':\r\n      return state.filter((task) => task.id !== action.id);\r\n    case 'TOGGLE_STATUS':\r\n      return state.map((task) =>\r\n        task.id === action.id\r\n          ? { ...task, status: task.status === 'Pending' ? 'In Progress' : 'Completed' }\r\n          : task\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Mock Data Fetch (Simulate fetching tasks from API)\r\nconst fetchTasks = async () => {\r\n  return [\r\n    { id: 1, title: 'Task 1', description: 'Description 1', status: 'Pending' },\r\n    { id: 2, title: 'Task 2', description: 'Description 2', status: 'In Progress' },\r\n    { id: 3, title: 'Task 3', description: 'Description 3', status: 'Completed' },\r\n  ];\r\n};\r\n\r\nconst DashBoard = () => {\r\n  const [tasks, dispatch] = useReducer(taskReducer, []);\r\n  const [filter, setFilter] = useState('All');\r\n  const [sortBy, setSortBy] = useState('title');\r\n  const [newTask, setNewTask] = useState({ title: '', description: '' });\r\n  const taskInputRef = useRef();\r\n\r\n  // Fetch Tasks\r\n  useEffect(() => {\r\n    const loadTasks = async () => {\r\n      const fetchedTasks = await fetchTasks();\r\n      fetchedTasks.forEach((task) => dispatch({ type: 'ADD_TASK', task }));\r\n    };\r\n    loadTasks();\r\n  }, []);\r\n\r\n  // Sorting and Filtering Logic with useMemo\r\n  const filteredTasks = useMemo(() => {\r\n    return tasks.filter((task) => filter === 'All' || task.status === filter);\r\n  }, [tasks, filter]);\r\n\r\n  const sortedTasks = useMemo(() => {\r\n    return filteredTasks.sort((a, b) => {\r\n      if (sortBy === 'title') {\r\n        return a.title.localeCompare(b.title);\r\n      } else {\r\n        return new Date(a.createdAt) - new Date(b.createdAt);\r\n      }\r\n    });\r\n  }, [filteredTasks, sortBy]);\r\n\r\n  // Handle Task Actions\r\n  const handleAddTask = () => {\r\n    const newTaskData = {\r\n      id: Date.now(),\r\n      title: newTask.title,\r\n      description: newTask.description,\r\n      status: 'Pending',\r\n      createdAt: new Date(),\r\n    };\r\n    dispatch({ type: 'ADD_TASK', task: newTaskData });\r\n    setNewTask({ title: '', description: '' });\r\n    taskInputRef.current.focus();\r\n  };\r\n\r\n  const handleEditTask = useCallback((id, updatedTask) => {\r\n    dispatch({ type: 'EDIT_TASK', id, updatedTask });\r\n  }, []);\r\n\r\n  const handleDeleteTask = (id) => {\r\n    dispatch({ type: 'DELETE_TASK', id });\r\n  };\r\n\r\n  const handleToggleStatus = (id) => {\r\n    dispatch({ type: 'TOGGLE_STATUS', id });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Task Dashboard</h1>\r\n      <div className=\"filters\">\r\n        <select onChange={(e) => setFilter(e.target.value)} value={filter}>\r\n          <option value=\"All\">All Tasks</option>\r\n          <option value=\"Pending\">Pending</option>\r\n          <option value=\"In Progress\">In Progress</option>\r\n          <option value=\"Completed\">Completed</option>\r\n        </select>\r\n        <select onChange={(e) => setSortBy(e.target.value)} value={sortBy}>\r\n          <option value=\"title\">Sort by Title</option>\r\n          <option value=\"date\">Sort by Date</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"task-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          placeholder=\"Task Title\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newTask.description}\r\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          placeholder=\"Task Description\"\r\n        />\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n      </div>\r\n\r\n      <div className=\"task-list\">\r\n        {sortedTasks.map((task) => (\r\n          <div key={task.id} className=\"task-item\">\r\n            <h3>{task.title}</h3>\r\n            <p>{task.description}</p>\r\n            <p>Status: {task.status}</p>\r\n            <button onClick={() => handleToggleStatus(task.id)}>\r\n              Toggle Status\r\n            </button>\r\n            <button onClick={() => handleEditTask(task.id, { title: 'Updated', description: 'Updated' })}>\r\n              Edit\r\n            </button>\r\n            <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}