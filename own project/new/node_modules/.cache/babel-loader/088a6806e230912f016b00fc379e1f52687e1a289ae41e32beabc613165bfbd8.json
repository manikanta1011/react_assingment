{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\own project\\\\new\\\\src\\\\task\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    fetch(\"/date.json\").then(response => response.json()).then(movies => {\n      const selectedMovie = movies.find(movie => movie.id === parseInt(id, 10));\n      setMovie(selectedMovie);\n    }).catch(error => console.error(\"Error fetching movie data:\", error));\n  }, [id]);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cri\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.image,\n      alt: movie.name,\n      width: \"20%\",\n      className: \"ho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Title: \", movie.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", movie.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Actor: \", movie.actor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Director: \", movie.director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \\u20B9\", movie.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"2DI+WM1NP8orkt5lpnG0LvHIzCE=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","MovieDetails","_s","id","movie","setMovie","fetch","then","response","json","movies","selectedMovie","find","parseInt","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","image","alt","name","width","year","actor","director","price","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/own project/new/src/task/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst MovieDetails = () => {\r\n  const { id } = useParams(); \r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/date.json\")\r\n      .then((response) => response.json())\r\n      .then((movies) => {\r\n        const selectedMovie = movies.find((movie) => movie.id === parseInt(id, 10));\r\n        setMovie(selectedMovie);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching movie data:\", error));\r\n  }, [id]);\r\n\r\n  if (!movie) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"cri\">\r\n      <img src={movie.image} alt={movie.name} width={\"20%\"} className=\"ho\" />\r\n      <h4>Title: {movie.name}</h4>\r\n      <p>Year: {movie.year}</p>\r\n      <p>Actor: {movie.actor}</p>\r\n      <p>Director: {movie.director}</p>\r\n      <p>Price: â‚¹{movie.price}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAK;MAChB,MAAMC,aAAa,GAAGD,MAAM,CAACE,IAAI,CAAER,KAAK,IAAKA,KAAK,CAACD,EAAE,KAAKU,QAAQ,CAACV,EAAE,EAAE,EAAE,CAAC,CAAC;MAC3EE,QAAQ,CAACM,aAAa,CAAC;IACzB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACZ,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,KAAK,EAAE,oBAAOJ,OAAA;IAAAiB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEpC,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAClBjB,OAAA;MAAKuB,GAAG,EAAEnB,KAAK,CAACoB,KAAM;MAACC,GAAG,EAAErB,KAAK,CAACsB,IAAK;MAACC,KAAK,EAAE,KAAM;MAACL,SAAS,EAAC;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvErB,OAAA;MAAAiB,QAAA,GAAI,SAAO,EAACb,KAAK,CAACsB,IAAI;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BrB,OAAA;MAAAiB,QAAA,GAAG,QAAM,EAACb,KAAK,CAACwB,IAAI;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAAiB,QAAA,GAAG,SAAO,EAACb,KAAK,CAACyB,KAAK;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BrB,OAAA;MAAAiB,QAAA,GAAG,YAAU,EAACb,KAAK,CAAC0B,QAAQ;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCrB,OAAA;MAAAiB,QAAA,GAAG,eAAQ,EAACb,KAAK,CAAC2B,KAAK;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1BID,YAAY;EAAA,QACDH,SAAS;AAAA;AAAAkC,EAAA,GADpB/B,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}